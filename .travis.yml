---
language: python
python: "2.7"

# Use the new container infrastructure
sudo: required

services:
  - docker

env:
  - distribution: centos
    init: /usr/lib/systemd/systemd
    version: 7
  - distribution: fedora
    init: /usr/lib/systemd/systemd
    version: 29
  - distribution: fedora
    init: /usr/lib/systemd/systemd
    version: 28
  - distribution: fedora
    init: /usr/lib/systemd/systemd
    version: 27
  - distribution: ubuntu
    init: /lib/systemd/systemd
    version: bionic
  - distribution: ubuntu
    init: /lib/systemd/systemd
    version: xenial
  - distribution: debian
    init: /lib/systemd/systemd
    version: stretch

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/

install: true

before_script:
  - pip install yamllint
  - yamllint -c .yamllint .
  - "sudo docker pull ${distribution}:${version}"
  - "sudo docker build --no-cache --rm --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests"

# TODO(kejones): add test for upgrade option
script:
  - container_id=$(mktemp)
  - role_name="ansible-role-logstash"
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/${role_name}:ro ${distribution}-${version}:ansible ${init} > "${container_id}"'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-galaxy install -c geerlingguy.java'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-lint -c /.ansible-lint /etc/ansible/roles/${role_name}/tests/test_defaults.yml'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/${role_name}/tests/test_defaults.yml -i localhost, --syntax-check'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/${role_name}/tests/test_defaults.yml -i localhost, --connection=local --become'
  - >
    sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/${role_name}/tests/test_defaults.yml -i localhost, --connection=local --become
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  - 'sudo docker rm -f "$(cat ${container_id})"'

# vi:ts=2:sw=2:et:ft=yaml
